{
  "Description": "Container Fargate Service (fdp-1p5s1037g)",
"Metadata" : {
  "Source":"https://github.com/awslabs/aws-cloudformation-templates/blob/master/aws/services/ECS/FargateLaunchType/services/private-subnet-public-service.yml"
},
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters": {
    "ECRImageURI": {
        "Type": "String",
        "Description" : "URI for the container from Amazon Elastic Container Registry."
    },
    "TaskDefinitionName": {
        "Type": "String",
        "Description" : "This will set the Container, Task Definition, and Service name in Fargate."
    },
    "HealthCheckPath": {
      "Type": "String",
      "Description" : "Health Check Path"
    },
    "certificateArn": {
      "Type": "String",
      "Description" : "ACM Certificate ARN"
    },
    "ContainerPort": {
        "Type":"Number",
        "Description" : "port number exposed from the container image.",
        "Default":80
    },  		
    "ContainerSize": {
        "Type":"String",
        "Description" : "Size of container for Fargate task.",
        "Default":"Small",
        "AllowedValues": ["Small","Medium","Large"]
    },
    "EnableHostHeader": {
      "Type": "String",
      "Description" : "Usage of Host Header condition",
      "Default": "false",
      "AllowedValues" : ["true", "false"]
    },
    "HostHeader": {
      "Type": "String",
      "Description" : "ALB Listener Target Forward Condition"
    },
    "EnablePathPattern": {
      "Type": "String",
      "Description" : "Usage of Path Pattern condition",
      "Default": "false",
      "AllowedValues" : ["true", "false"]
    },
    "PathPattern": {
      "Type": "String",
      "Description" : "ALB Listener Target Path Pattern Condition"
    }
  },    
  "Conditions" : {
    "UsePathPattern" : {"Fn::Equals" : [{"Ref" : "EnablePathPattern"}, "true"]},
    "UseHostHeader" : {"Fn::Equals" : [{"Ref" : "EnableHostHeader"}, "true"]},
    "UsePathPatternAndHostHeader": {
      "Fn::And": [
        {"Fn::Equals" : [{"Ref" : "EnablePathPattern"}, "true"]},
        {"Fn::Equals" : [{"Ref" : "EnableHostHeader"}, "true"]}
      ]
    }
  },
"Mappings" : {
      "MapContainerSize" : {
          "Small" : {
              "cpu" : "512" ,
              "mem" : "1024"
          },
          "Medium" : {
              "cpu" : "1024",
              "mem" : "2048"
          },
          "Large" : {
              "cpu" : "4096",
              "mem" : "8192"
          }
      }
  },
  "Resources": {
    "TaskLogGroup": {
        "Type" : "AWS::Logs::LogGroup",
        "Properties" : {
            "LogGroupName" : {"Fn::Sub":"/ecs/${TaskDefinitionName}"},
            "RetentionInDays" : 30
          }
      },    
      "taskdefinition": {
          "Type": "AWS::ECS::TaskDefinition",
          "Properties" : {
              "ExecutionRoleArn": {"Fn::ImportValue": "ECSTaskExecutionRole"},
              "RequiresCompatibilities": [
                "FARGATE"
              ],
              "Memory":  { "Fn::FindInMap" : [ "MapContainerSize", { "Ref" : "ContainerSize" }, "mem"]},
              "Family": {"Ref":"TaskDefinitionName"},
              "NetworkMode": "awsvpc",
              "Cpu": { "Fn::FindInMap" : [ "MapContainerSize", { "Ref" : "ContainerSize" }, "cpu"]},
              "ContainerDefinitions" : [
                  {
                    "PortMappings": [
                      { "ContainerPort": {"Ref": "ContainerPort"} }
                    ],
                    "LogConfiguration": {
                      "LogDriver": "awslogs",
                      "Options": {
                        "awslogs-group": {"Ref":"TaskLogGroup"},
            "awslogs-region": {"Ref":"AWS::Region"},
                        "awslogs-stream-prefix": "ecs"
                      }
                    },
                    "Environment": [
                          {
                              "Name": "AWS_REGION",
                              "Value": {"Ref":"AWS::Region"}
                          }
                    ],
                    "Image": {"Ref":"ECRImageURI"},
                    "Name": {"Ref":"TaskDefinitionName"}
                  }
              ]
          }
      },      
    "ecsservice" : {
      "Type" : "AWS::ECS::Service",
      "DependsOn": ["PublicLoadBalancerHttpsListener"],
      "Properties" : {			
        "TaskDefinition" : { "Ref" : "taskdefinition" },
        "DesiredCount" : "1",
        "LoadBalancers" : [{
          "TargetGroupArn" : { "Ref" : "TargetGroup" },
          "ContainerPort" : { "Ref" : "ContainerPort" },
          "ContainerName" : {"Ref":"TaskDefinitionName"}
        }],
        "Cluster" : { "Fn::ImportValue" : "FargateClusterName" },
        "LaunchType": "FARGATE",
        "ServiceName": {"Ref":"TaskDefinitionName"},
        "NetworkConfiguration":{
          "AwsvpcConfiguration" : {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups":[
            {"Fn::ImportValue": "ECSFargateContainerSecurityGroup" }
            ],
            "Subnets": [
            { "Fn::ImportValue": "ECSPrivateSubnetOne"},
            { "Fn::ImportValue": "ECSPrivateSubnetTwo"}
            ]
        }}
      }
    },
   "TargetGroup" : {
     "Type" : "AWS::ElasticLoadBalancingV2::TargetGroup",
     "Properties" : {
       "HealthCheckIntervalSeconds" : 30,
       "HealthCheckPath" : { "Ref": "HealthCheckPath"},
       "HealthCheckProtocol" : "HTTP",
       "HealthCheckTimeoutSeconds" : 5,
       "HealthyThresholdCount" : 2,
       "TargetType" : "ip",
       "Name" : {"Fn::Sub":"${TaskDefinitionName}-TargetGroup" },
       "Port" : { "Ref": "ContainerPort"},
       "Protocol" : "HTTP",
       "UnhealthyThresholdCount" : 2,
       "VpcId" : { "Fn::ImportValue" : "FargateClusterVPCId" }
    }
  },
  
  "PublicLoadBalancerHttpsListener" : {
    "Type" : "AWS::ElasticLoadBalancingV2::Listener",			
    "Properties" : {
      "DefaultActions" : [
        { "TargetGroupArn" : {"Ref":"TargetGroup"} ,
          "Type" : "forward" 
        }
      ],
      "LoadBalancerArn" : { "Fn::ImportValue" :"ECSPublicLoadBalancer"},
      "Port" : 443,
      "Certificates": [
        {
          "CertificateArn": {"Ref": "certificateArn"}
        }
      ],
      "Protocol" : "HTTPS"
    }
  },
  "PublicLoadBalancerHttpsListenerPathPatternRule": {
    "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
    "Condition": "UsePathPattern",
    "Properties": {
      "Actions": [
        {
          "TargetGroupArn": { "Ref": "TargetGroup" },
          "Type": "forward"
        }
      ],
      "Conditions": [
        {
          "Field": "path-pattern",
          "PathPatternConfig": {
              "Values": [ {"Ref" : "PathPattern"} ]
          }
        }
      ],
      "ListenerArn": {
        "Ref": "PublicLoadBalancerHttpsListener"
      },
      "Priority": 100
    }
  },
  "PublicLoadBalancerHttpsListenerHostHeaderRule": {
    "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
    "Condition": "UseHostHeader",
    "Properties": {
      "Actions": [
        {
          "TargetGroupArn": { "Ref": "TargetGroup" },
          "Type": "forward"
        }
      ],
      "Conditions": [
        {
          "Field": "host-header",
          "PathPatternConfig": {
              "Values": [ {"Ref" : "HostHeader"} ]
          }
        }
      ],
      "ListenerArn": {
        "Ref": "PublicLoadBalancerHttpsListener"
      },
      "Priority": 200
    }
  },
  "PublicLoadBalancerHttpsListenerHostHeaderAndPathPatternRule": {
    "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
    "Condition": "UsePathPatternAndHostHeader",
    "Properties": {
      "Actions": [
        {
          "TargetGroupArn": { "Ref": "TargetGroup" },
          "Type": "forward"
        }
      ],
      "Conditions": [
        {
          "Field": "host-header",
          "PathPatternConfig": {
              "Values": [ {"Ref" : "HostHeader"} ]
          }
        },
        {
          "Field": "path-pattern",
          "PathPatternConfig": {
              "Values": [ {"Ref" : "PathPattern"} ]
          }
        }
      ],
      "ListenerArn": {
        "Ref": "PublicLoadBalancerHttpsListener"
      },
      "Priority": 200
    }
  },
  "PublicLoadBalancerRedirectHttpToHttpsListener": {
    "Type": "AWS::ElasticLoadBalancingV2::Listener",
    "Properties": {
      "DefaultActions": [
        {
          "RedirectConfig": {
            "Port": "443",
            "Protocol": "HTTPS",
            "StatusCode": "HTTP_301"
          },
          "Type": "redirect"
        }
      ],
      "LoadBalancerArn" : { "Fn::ImportValue" :"ECSPublicLoadBalancer"},
      "Port": 80,
      "Protocol": "HTTP"
    }
  }		
},
"Outputs": {
      "FargateService":{"Value": { "Ref":"ecsservice" } }
  }
}